/*
 * ModelSearch.java
 *
 * Created on February 18, 2009, 9:27 PM
 */

package gui;

import java.util.StringTokenizer;
import javax.swing.JFrame;

/**
 *
 * @author  Administrator
 */
public class ModelSearch extends javax.swing.JDialog {
    
    /** Creates new form ModelSearch */
    String bhk1,furn1,broker1,type1,purpose1,time1,price1;
    javax.swing.JDesktopPane parent1;
    long rate;
     String query,areas;
     long spb1;
     String size1;
    
    public ModelSearch(java.awt.Frame parent, boolean modal,javax.swing.JDesktopPane jdp) {
        super(parent, modal);
        parent1=jdp;
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        type = new javax.swing.JComboBox();
        price = new javax.swing.JComboBox();
        furnished = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        bhk = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        purpose = new javax.swing.JComboBox();
        search = new javax.swing.JButton();
        close = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        size = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 255));
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Century", 1, 17));
        jLabel1.setText("Property Type : ");

        jLabel5.setFont(new java.awt.Font("Century", 1, 17));
        jLabel5.setText("Price Range :");

        jLabel2.setFont(new java.awt.Font("Century", 1, 17));
        jLabel2.setText("Furnished :");

        type.setFont(new java.awt.Font("Century", 0, 16));
        type.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---ALL---", "FLAT", "OFFICE", "BANGLOW","PLOT"}));

        price.setFont(new java.awt.Font("Century", 0, 16));
        price.setModel(new javax.swing.DefaultComboBoxModel(new String[] {  "< 5 lacs", "< 15 lacs", "< 25 lacs ","< 40 lacs ","> 40 lacs","- other " }));

        furnished.setFont(new java.awt.Font("Century", 0, 16));
        furnished.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---ALL---","Fully Furnished", "Semi-Furnished", "Non-Furnished"   }));

        jLabel4.setFont(new java.awt.Font("Century", 1, 17));
        jLabel4.setText("BHK :");

        bhk.setFont(new java.awt.Font("Century", 0, 16));
        bhk.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---ALL---"," 1 BHK ", " 2 BHK ", " 3 BHK  "," 4 BHK "," 5 BHK " }));

        jLabel6.setFont(new java.awt.Font("Century", 1, 17));
        jLabel6.setText("Purpose :");

        purpose.setFont(new java.awt.Font("Century", 0, 16));
        purpose.setModel(new javax.swing.DefaultComboBoxModel(new String[] {"---ALL---","SELL","PURCHASE","RENTAL"}));

        search.setBackground(new java.awt.Color(153, 153, 153));
        search.setFont(new java.awt.Font("Century", 0, 16));
        search.setText(" Search ");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        close.setBackground(new java.awt.Color(153, 153, 153));
        close.setFont(new java.awt.Font("Century", 0, 16));
        close.setText(" Close ");
        close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeMouseClicked(evt);
            }
        });
        close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Castellar", 1, 18));
        jLabel7.setForeground(new java.awt.Color(255, 153, 153));
        jLabel7.setText("Search");

        jLabel3.setFont(new java.awt.Font("Century", 1, 17));
        jLabel3.setText("Size : ");

        size.setFont(new java.awt.Font("Century", 0, 16));
        size.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ALL", "< 500", "< 1500", "< 2000", "< 2500", "< 5000", "< 10000" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(170, 170, 170)
                .addComponent(search)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 118, Short.MAX_VALUE)
                .addComponent(close, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(169, 169, 169))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(type, 0, 135, Short.MAX_VALUE)
                            .addComponent(price, 0, 135, Short.MAX_VALUE)
                            .addComponent(purpose, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 212, Short.MAX_VALUE)))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(size, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(furnished, 0, 135, Short.MAX_VALUE)
                    .addComponent(bhk, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(furnished, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bhk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(size, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(purpose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(search)
                    .addComponent(close))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseClicked
        setVisible(false);// TODO add your handling code here:
    }//GEN-LAST:event_closeMouseClicked

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
        furn1=(String)furnished.getSelectedItem();
        bhk1=(String)bhk.getSelectedItem();
        type1=(String)type.getSelectedItem();
       // broker1=(String)broker.getSelectedItem();
        purpose1=(String)purpose.getSelectedItem();
        size1=(String)size.getSelectedItem();
        price1=(String)price.getSelectedItem();
        
        StringTokenizer st = new StringTokenizer(price1);
       System.out.println( st.nextToken());
        String prc=st.nextToken();
        System.out.println(prc);
        if(prc.equals("5"))
            rate=500000;
        else if(prc.equals("15"))
            rate=1500000;
        else if(prc.equals("25"))
            rate=2500000;
        else if(prc.equals("40"))
            rate=4000000;
        else 
            rate=100000000;
        
        StringTokenizer sizest = new StringTokenizer(size1);
        String sizeall=sizest.nextToken();
        System.out.println("sizeall = "+sizeall);
        if(!sizeall.equals("ALL")){
        String sizes=sizest.nextToken();
        System.out.println("sizes"+sizes);
        if(sizes.equals("500"))
            spb1=500;
        else if(sizes.equals("1500"))
            spb1=1500;
        else if(sizes.equals("2000"))
            spb1=2000;
        else if(sizes.equals("2500"))
            spb1=2500;
        else if(sizes.equals("5000"))
            spb1=5000;
        else if(sizes.equals("10000"))
            spb1=10000;
        }
        else
            spb1=100000000;
       
        System.out.println("spb ="+spb1);
        String all="---ALL---";
        boolean t=type1.equals(all);
         boolean f=furn1.equals(all);
          boolean p=purpose1.equals(all);
           boolean b=bhk1.equals(all);
       
       
        if(!f&&!p&&!b&&!t)          
        query="SELECT ID,name,spb,price,location,bhk,furn,type,purpose FROM globaldata where price<"+rate+
                
                "and furn='"+furn1+"'"+
                "and purpose='"+purpose1+"'"+
                "and bhk='"+bhk1+"'" +
                "and type='"+type1+"'"+"and spb<"+spb1;
           
         if(!f&&!p&&!b&&t)          
        query="SELECT ID,name,spb,price,location,bhk,furn,type,purpose FROM globaldata where price<"+rate+
                
                "and furn='"+furn1+"'"+
                "and purpose='"+purpose1+"'"+
                "and bhk='"+bhk1+"'" +"and spb<"+spb1;
           
           if(!f&&!p&&b&&!t)
        query="SELECT ID,name,spb,price,location,bhk,furn,type,purpose FROM globaldata where price<"+rate+
                
                "and furn='"+furn1+"'"+
                "and purpose='"+purpose1+"'"+
                
                "and type='"+type1+"'"+"and spb<"+spb1;
           
           if(!f&&p&&!b&&!t)
        query="SELECT ID,name,spb,price,location,bhk,furn,type,purpose FROM globaldata where price<"+rate+
                
                "and furn='"+furn1+"'"+
                
                "and bhk='"+bhk1+"'" +
                "and type='"+type1+"'"+"and spb<"+spb1;
           
           if(f&&!p&&!b&&!t)
        query="SELECT ID,name,spb,price,location,bhk,furn,type,purpose FROM globaldata where price<"+rate+
               
                
                "and purpose='"+purpose1+"'"+
                "and bhk='"+bhk1+"'" +
                "and type='"+type1+"'"+"and spb<"+spb1;
           
           if(!f&&!p&&b&&t)
        query="SELECT ID,name,spb,price,location,bhk,furn,type,purpose FROM globaldata where price<"+rate+
               
                "and furn='"+furn1+"'"+
                "and purpose='"+purpose1+"'"+"and spb<"+spb1;
           
           if(!f&&p&&!b&&t)
        query="SELECT ID,name,spb,price,location,bhk,furn,type,purpose FROM globaldata where price<"+rate+
                
                "and furn='"+furn1+"'"+
                
                "and bhk='"+bhk1+"'" +"and spb<"+spb1;
           
           if(f&&!p&&!b&&t)
        query="SELECT ID,name,spb,price,location,bhk,furn,type,purpose FROM globaldata where price<"+rate+
                
                "and purpose='"+purpose1+"'"+
                "and bhk='"+bhk1+"'" +"and spb<"+spb1;
           
           if(!f&&p&&b&&!t)
        query="SELECT ID,name,spb,price,location,bhk,furn,type,purpose FROM globaldata where price<"+rate+
                
                "and furn='"+furn1+"'"+
                
                "and type='"+type1+"'"+"and spb<"+spb1;
           
           if(f&&!p&&b&&!t)
        query="SELECT ID,name,spb,price,location,bhk,furn,type,purpose FROM globaldata where price<"+rate+
               
                
                "and purpose='"+purpose1+"'"+
                
                "and type='"+type1+"'"+"and spb<"+spb1;
           
           if(f&&p&&!b&&!t)
        query="SELECT ID,name,spb,price,location,bhk,furn,type,purpose FROM globaldata where price<"+rate+
               
                
                "and bhk='"+bhk1+"'" +
                "and type='"+type1+"'"+"and spb<"+spb1;
           
           if(!f&&p&&b&&t)
        query="SELECT ID,name,spb,price,location,bhk,furn,type,purpose FROM globaldata where price<"+rate+
               
                "and furn='"+furn1+"'"+"and spb<"+spb1;
           
           if(f&&!p&&b&&t)
        query="SELECT ID,name,spb,price,location,bhk,furn,type,purpose FROM globaldata where price<"+rate+
                
                
                "and purpose='"+purpose1+"'"+"and spb<"+spb1;
           
           if(f&&p&&b&&!t)
        query="SELECT ID,name,spb,price,location,bhk,furn,type,purpose FROM globaldata where price<"+rate+
                
                
                "and type='"+type1+"'"+"and spb<"+spb1;
           
           if(f&&p&&!b&&t)
        query="SELECT ID,name,spb,price,location,bhk,furn,type,purpose FROM globaldata where price<"+rate+
                
               
                
                "and bhk='"+bhk1+"'" +"and spb<"+spb1;
           
           if(f&&p&&b&&t)
        query="SELECT ID,name,spb,price,location,bhk,furn,type,purpose FROM globaldata where price<"+rate
                
                +"and spb<"+spb1;
           
       
            
         Model_List md  = new Model_List("List",true,true,true,true, query,parent1); 

                    parent1.add( md ); // attach internal frame
                    md.setVisible(true);
                    
                    this.setVisible(false);
    }//GEN-LAST:event_searchActionPerformed

    private void closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeActionPerformed
        // TODO add your handling code here:
        //setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setVisible(false);
    }//GEN-LAST:event_closeActionPerformed
    
    /**
     * @param args the command line arguments
     */
    /*public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ModelSearch dialog = new ModelSearch(new javax.swing.JFrame(), true,new javax.swing.JdesktopPane());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }*/
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox bhk;
    private javax.swing.JButton close;
    private javax.swing.JComboBox furnished;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JComboBox price;
    private javax.swing.JComboBox purpose;
    private javax.swing.JButton search;
    private javax.swing.JComboBox size;
    private javax.swing.JComboBox type;
    // End of variables declaration//GEN-END:variables
    
}
