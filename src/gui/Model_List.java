/*
 * Model_List.java
 *
 * Created on January 26, 2009, 11:45 AM
 */

package gui;

import database.DataTable;
import database.Database;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;
/**
 *
 * @author  student
 */
public class Model_List extends javax.swing.JInternalFrame  implements DataTable{
    javax.swing.JDesktopPane jdpt;
    ResultSet rs;
    int table;
    Database db;
    Mod m;
    /** Creates new form Model_List */
    public Model_List(String title,
                      boolean resizable,
                      boolean closable,
                      boolean maximizable,
                      boolean iconifiable,String operation,javax.swing.JDesktopPane jdp){
        super(title,false,true,false,true);
        
         jdpt=jdp;
        db = new Database();
        rs = db.search(operation);
        
        m=new Mod(rs);
        initComponents();
        //db.close();
    
    }
   /* public Model_List(String title,
                      boolean resizable,
                      boolean closable,
                      boolean maximizable,
                      boolean iconifiable,int tab,String operation,javax.swing.JDesktopPane jdp){
        super(title,false,true,false,true);
        table = tab;
         jdpt=jdp;
        db = new Database();
        rs = db.accessData(GLOBAL_TABLE,operation);
       
        //db.close();
        m=new Mod(rs);
        initComponents();
    
    }*/
    
    
   /* public Model_List(int tab,String operation)//,javax.swing.JDesktopPane jdp) {
    {
        //jdpt=jdp;
        table = tab;
        
        Database db = new Database();
        rs = db.accessData(table,operation);
        initComponents();
        //this.setSize(this.getToolkit().getScreenSize());
  }*/
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        record = new javax.swing.JTextField();
        view = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        close = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 255));

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setBorder(new javax.swing.border.MatteBorder(null));
        jTable1.setFont(new java.awt.Font("Century", 0, 16));
        jTable1.setModel(new Mod(rs));
        jTable1.setAlignmentX(10.0F);
        jTable1.setAlignmentY(10.0F);
        jTable1.setRowHeight(26);
        jTable1.setRowMargin(3);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Castellar", 1, 17));
        jLabel1.setForeground(new java.awt.Color(255, 153, 153));
        jLabel1.setText("Property Record List :");

        jLabel2.setFont(new java.awt.Font("Century", 1, 17));
        jLabel2.setText("Open Record ID :");

        record.setBackground(new java.awt.Color(255, 255, 153));
        record.setFont(new java.awt.Font("Century", 0, 16));

        view.setBackground(new java.awt.Color(153, 153, 153));
        view.setFont(new java.awt.Font("Century", 0, 16));
        view.setText("  View  ");
        view.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewActionPerformed(evt);
            }
        });

        edit.setBackground(new java.awt.Color(153, 153, 153));
        edit.setFont(new java.awt.Font("Century", 0, 16));
        edit.setText("  Edit/Update  ");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        close.setBackground(new java.awt.Color(153, 153, 153));
        close.setFont(new java.awt.Font("Century", 0, 16));
        close.setText("  Close  ");
        close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeMouseClicked(evt);
            }
        });
        close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(181, 181, 181)
                .addComponent(view)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 205, Short.MAX_VALUE)
                .addComponent(edit)
                .addGap(183, 183, 183)
                .addComponent(close)
                .addGap(103, 103, 103))
            .addGroup(layout.createSequentialGroup()
                .addGap(359, 359, 359)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(record, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(387, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 965, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(record, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(view)
                    .addComponent(close)
                    .addComponent(edit))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void viewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewActionPerformed
        try{
        if(!record.getText().equals(null))
        {
            Database dbb=new Database();
            int id = Integer.parseInt(record.getText());
            System.out.println(id);
            ResultSet rss = dbb.accessData(id);
            System.out.println(rs+"\t In List"+rss);
           
        if(rs!=null)
        {
            //rs.next();
            String typef=dbb.type();
            String purposef= dbb.purpose();
           // System.out.println(dbb.type());
            if(typef.equals("PLOT")){
                N_Model_View mf = new N_Model_View(rss,id,typef,purposef);
                jdpt.add( mf );
                mf.setVisible(true);// attach internal frame
            }
            else if(typef.equals("OFFICE"))
            {
                 O_Model_iView mf = new O_Model_iView(rss,id,typef,purposef);
                jdpt.add( mf ); // attach internal frame
                 mf.setVisible(true);
            }
            else{
                 PN_Model_iView mf = new PN_Model_iView(rss,id,typef,purposef);
                jdpt.add( mf ); // attach internal frame
                 mf.setVisible(true);
            }
       this.setVisible(false);
        }
        }
        else
            JOptionPane.showMessageDialog(null,".....Please enter valid record ID","Incorrect ID!",JOptionPane.ERROR_MESSAGE);
        }
        catch(Exception e){
        JOptionPane.showMessageDialog(null,"Please enter valid record ID","Incorrect ID!",JOptionPane.ERROR_MESSAGE);
        }
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_viewActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        // TODO add your handling code here:
         try{
        if(!record.getText().equals(null))
        {
            Database dbb=new Database();
            int id = Integer.parseInt(record.getText());
            System.out.println(id);
            ResultSet rss = dbb.accessData(id);
            System.out.println(rs+"\t In List"+rss);
           
        if(rs!=null)
        {
             String typef=dbb.type();
             String purposef=dbb.purpose();
           // System.out.println(dbb.type());
            if(typef.equals("PLOT")){
                N_Model_Edit mf = new N_Model_Edit(rss,id,typef,purposef);
                jdpt.add( mf );
                mf.setVisible(true);// attach internal frame
            }
             else if(typef.equals("OFFICE"))
            {
                 O_Model_iEdit mf = new O_Model_iEdit(rss,id,typef,purposef);
                jdpt.add( mf ); // attach internal frame
                 mf.setVisible(true);
            }

            else{
                 PN_Model_iEdit mf = new PN_Model_iEdit(rss,id,typef,purposef);
                jdpt.add( mf ); // attach internal frame
                 mf.setVisible(true);
            }
       this.setVisible(false);
        }
        }
        else
            JOptionPane.showMessageDialog(null,".....Please enter valid record ID","Incorrect ID!",JOptionPane.ERROR_MESSAGE);
        }
        catch(Exception e){
        JOptionPane.showMessageDialog(null,"Please enter valid record ID","Incorrect ID!",JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_editActionPerformed

    private void closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        db.close();
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    }//GEN-LAST:event_closeActionPerformed

    private void closeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        db.close();
    }//GEN-LAST:event_closeMouseClicked
    
    /**
     * @param args the command line arguments
     */
   /* public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Model_List dialog = new Model_List(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }*/
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton close;
    private javax.swing.JButton edit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField record;
    private javax.swing.JButton view;
    // End of variables declaration//GEN-END:variables
    
}


class Mod extends AbstractTableModel
{
ResultSetMetaData rsmd;
ResultSet rs;
int rows,cols;
Mod(ResultSet r)
{
  try{
  rs = r;
  
  rsmd = rs.getMetaData();
  
rs.last();
rows = rs.getRow();
//rs.beforeFirst();
  
  System.out.println("rows :"+rows+"\ncols : "+rsmd.getColumnCount());
}
catch(Exception ex){System.out.println("Exception ex "+ex);}
}
public int getRowCount()
{
  return rows;


}
  public int getColumnCount()
{
try{
   return rsmd.getColumnCount();
}
catch(Exception ex){System.out.println(" Ex :\n\n"+ex);}
return cols;
}
  
public Object getValueAt(int row, int column)
{
if(rs!=null)
{
try{
rs.absolute(row+1);

  return rs.getObject(column+1);}
catch(Exception ex){System.out.println("Exception ex :afdaf"+ex);}
}
return "abc";
}

public Class getColumnClass(int col)
{
try{
String className = rsmd.getColumnClassName(col+1);
return Class.forName(className);
}
catch(Exception ex){System.out.println("Exception ex "+ex);}
return Object.class;
}


public String getColumnName(int col)
{
  try{
return rsmd.getColumnName(col+1);
}
catch(Exception ex){System.out.println("Exception ex "+ex);}
return "";
}

public void refresh()
{
    fireTableStructureChanged();           
}

}
 

